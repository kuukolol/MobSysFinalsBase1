@code {
    [Parameter] public string Message { get; set; }
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task HideToast()
    {
        await Task.Delay(1800);
        await OnClose.InvokeAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Show)
        {
            await HideToast();
        }
    }
}

@if (Show)
{
    <div style="position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);z-index:9999;background:#4CAF50;color:#fff;padding:15px 32px;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.2);font-size:1rem;animation:fadeInOut 1.8s;display:flex;align-items:center;gap:8px;">
        <span>@Message</span>
    </div>
}

<style>
    #&64;keyframes fadeInOut {
        0%

    {
        opacity: 0;
        transform: translate(-50%, -16px);
    }

    10% {
        opacity: 1;
        transform: translate(-50%, 0);
    }

    90% {
        opacity: 1;
    }

    100% {
        opacity: 0;
        transform: translate(-50%, -16px);
    }

    }
</style>
